<!DOCTYPE html>
<html lang="">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Search Algorithms</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/p5.js/1.0.0/p5.js"></script>
  <script src="/javascripts/sketch.js" type="text/javascript"></script>
  <!--   boostrap stuff   -->
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css" integrity="sha384-9aIt2nRpC12Uk9gS9baDl411NQApFmC26EwAOH8WgZl5MYYxFfc+NcPb1dKGj7Sk" crossorigin="anonymous">
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js" integrity="sha384-OgVRvuATP1z7JjHLkuOU7Xw704+h835Lr+6QL9UvYjZE3Ipu6Tp75j7Bh/kR0JKI" crossorigin="anonymous"></script>
  <link rel="stylesheet" type="text/css" href='/stylesheets/style.css'>
</head>

<body>

<nav class="navbar sticky-top navbar-expand-lg navbar-dark bg-dark text-light">

  <div class="collapse navbar-collapse" id="navbarNav">
    <ul class="navbar-nav mr-auto">
      <li class="nav-item active">
        <a class="nav-link">A* Algorithm</a>
      </li>
    </ul>
    <ul class="navbar-nav ml-auto mr-5">
      <li class="nav-item">
        <a class="nav">O_O</a>
      </li>
    </ul>
  </div>

</nav>

<div class="container m-3 bg-transparent text-white text-center mx-auto">
  <div class="jumbotron bg-transparent m-2 p-2">
    <h1 class="text-dark p-2 m-2 bg-transparent">A* Algorithm</h1>
    <h5 class="lead border border-light rounded p-2 m-2 bg-dark">The A* Algorithm is the popular choice for PathFinding, it uses a combination of traits from different search algorithms such as Dijkstraâ€™s algorithm and Greedy Best-first search to help guide it's search</h5>
    <h5 class="lead border border-light rounded p-2 m-2 bg-dark">It uses a heuristic that takes into account the distance from the goal (h) and the cost of choosing that node (g) these two search traits form the evaluation function f(n) where: <br> f(n) = g(n) + h(n) </h5>
  </div>
</div>

<div class="container">

  <div class="row">
    <div class="col-md-auto mx-auto my-auto">
      <div class="container mt-5 bg-dark text-light rounded">

        <h1 class="small p-2 border border-dark rounded bg-dark text-white">Click on the Start/End Coordinates to move them!</h1>

        <div class="form-group text-center">
          <input type="checkbox" class="form-check-input" value="false" id="diagonal" onclick="on_diagonal()">
          <label class="form-check-label" for="exampleCheck1">Allow diagonal movement</label>
        </div>


        <div class="form-group">
          <label for="grid_size">Grid Size</label>
          <select class="form-control" id="grid_size" onchange="on_grid_resize()">
            <option class="g">10x10</option>
            <option class="g">20x20</option>
            <option class="g">25x25</option>
            <option class="g">50x50</option>
          </select>
          <small id="emailHelp" class="form-text text-muted">Default is 10x10 grid</small>
        </div>

        <div class="form-group">
          <label for="obstacals">Number of obsticals generated</label>
          <input type="text" class="form-control" id="obsticals" aria-describedby="emailHelp" placeholder="Enter amount here">
          <button class="btn btn-sm btn-outline-warning mt-3 mx-auto" id="generate_ob" onclick="on_random()">Randomly generate obstacles</button>
        </div>

        <div class="form-group">
          <label for="exampleFormControlSelect1">Select Heuristic to search with!</label>
          <select class="form-control" id="heuristic" onchange="on_heuristic()">
            <option value="1">1: Euclidian Heuristic</option>
            <option value="2">2: Manhattan Heuristic</option>
          </select>
        </div>

        <div class="text-center p-3">
          <button type="submit" class="btn btn-outline-success" id="submit" onclick="onSubmit()" style="margin: 0 auto">Search</button>
        </div>
      </div>
    </div>
    <div class="col-md-auto mt-5 mx-auto">
      <div class="container" id="sketch"></div>
    </div>
  </div>

</div>

<div class="jumbotron bg-light mt-3">
  <h1 class="display-5 text-center pb-5">Pseudo Code for the A* Algorithm</h1>
  <div class="container lead">
    <p>Declare two lists<code> Open[] and Closed[]</code> Open is for unvisited nodes, Closed is for visited nodes</p>
    <p>Push starting node into the open list<code> Open.push(start_node)</code></p>
    <p>(Optional) Push obstacles into closed list <code> Closed.push(obstacles)</code></p>
    <hr class="my-4">
    <p>While there is a node to be explored in the open list</p>
    <p>Find the node in the open list that has the lowest <code> f(n)</code> value</p>
    <p>Check if that node is the end_node we are looking for</p>
    <p>Push current node into <code> closed</code> list and remove from <code> open</code> list</p>
    <p>Generate the current node's neighbours</p>
    <hr class="my-4">
    <p>For each neighbour</p>
    <p>If it is the closed list, continue</p>
    <p>If it is <code> not</code> in the open list, add to open list</p>
    <p>If it is <code> in</code> the open list, compare <code> f(n) node in open list and f(n) current neighbour</code></p>
    <p>If the <code>f(n) </code>of the current neighbour is <code>less </code> than, then update that node in the open list <code> f(n) value</code></p>
  </div>
  <hr class="my-4">
  <p class="text-center lead">Here is a link to my <a href="https://github.com/WilliamWallitt/Pathfinder">github</a> if you are interested</p>
</div>

<footer class="footer">
  <div class="container">
    <span class="text-muted">William Wallitt</span>
  </div>
</footer>
</body>
</html>